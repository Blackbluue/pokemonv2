-- TODO: decide if these stats should also include ev/IV/nature changes
-- TODO: might remove stats entirely and calculate them when needed
CREATE TABLE PokeStats(
    id              SMALLINT    NOT NULL    PRIMARY KEY,
    nature          VARCHAR(16) NOT NULL    REFERENCES Nature,
    ability         VARCHAR(16) NOT NULL    REFERENCES Ability,
    stats_hp        SMALLINT    NOT NULL,
    stats_atk       SMALLINT    NOT NULL,
    stats_def       SMALLINT    NOT NULL,
    stats_sp_atk    SMALLINT    NOT NULL,
    stats_sp_def    SMALLINT    NOT NULL,
    stats_spd       SMALLINT    NOT NULL
);
COMMENT ON TABLE PokeStats IS 'The stats of a Pokémon.';

CREATE TABLE HiddenStats(
    id          SMALLINT    NOT NULL    PRIMARY KEY,
    happiness   SMALLINT    NOT NULL,
    ev_hp       SMALLINT    NOT NULL    DEFAULT 0,
    ev_atk      SMALLINT    NOT NULL    DEFAULT 0,
    ev_def      SMALLINT    NOT NULL    DEFAULT 0,
    ev_sp_atk   SMALLINT    NOT NULL    DEFAULT 0,
    ev_sp_def   SMALLINT    NOT NULL    DEFAULT 0,
    ev_spd      SMALLINT    NOT NULL    DEFAULT 0,
    iv_hp       BIT(5)      NOT NULL    DEFAULT 1::bit(5),
    iv_atk      BIT(5)      NOT NULL    DEFAULT 1::bit(5),
    iv_def      BIT(5)      NOT NULL    DEFAULT 1::bit(5),
    iv_dp_atk   BIT(5)      NOT NULL    DEFAULT 1::bit(5),
    iv_sp_def   BIT(5)      NOT NULL    DEFAULT 1::bit(5),
    iv_spd      BIT(5)      NOT NULL    DEFAULT 1::bit(5)
);
COMMENT ON TABLE HiddenStats IS 'The hidden stats of a Pokémon.';

CREATE TABLE MoveList(
    id              SMALLINT    NOT NULL        PRIMARY KEY,
    move_1          VARCHAR(16) NOT NULL        REFERENCES Move,
    move_1_pp_up    BIT(2)      NOT NULL        DEFAULT 0::bit(2),
    move_2          VARCHAR(16) DEFAULT NULL    REFERENCES Move,
    move_2_pp_up    BIT(2)      DEFAULT NULL,
    move_3          VARCHAR(16) DEFAULT NULL    REFERENCES Move,
    move_3_pp_up    BIT(2)      DEFAULT NULL,
    move_4          VARCHAR(16) DEFAULT NULL    REFERENCES Move,
    move_4_pp_up    BIT(2)      DEFAULT NULL
);
COMMENT ON TABLE MoveList IS 'The current move list of a Pokémon.';

-- TODO: add ribbon information
CREATE TABLE Pokemon(
    id              SMALLINT        NOT NULL        PRIMARY KEY     REFERENCES PokeStats,
    nat_id          SMALLINT        NOT NULL,
    reg_form        VARCHAR(16)     DEFAULT NULL    REFERENCES RegionalForm,
    gender          gender,
    spc_form        BIT(5)          DEFAULT NULL,
    btl_form        VARCHAR(16)     DEFAULT NULL    REFERENCES BattleForm,
    ot_id           SMALLINT        NOT NULL,
    game            VARCHAR(16)     NOT NULL        REFERENCES Game,
    ot_name         VARCHAR(16)     DEFAULT NULL,
    nickname        VARCHAR(16)     DEFAULT NULL,
    held_item       VARCHAR(16)     DEFAULT NULL,
    date_met        DATE            DEFAULT NULL,
    level           SMALLINT        NOT NULL    CHECK(level <= 100),
    FOREIGN KEY(id)                                             REFERENCES PokeStats(id),
    FOREIGN KEY(id)                                             REFERENCES HiddenStats(id),
    FOREIGN KEY(id)                                             REFERENCES MoveList(id),
    FOREIGN KEY(nat_id, reg_form, gender, spc_form, btl_form)   REFERENCES PokemonSpecies(nat_id, reg_form, gnd_form, spc_form, btl_form),
    FOREIGN KEY(ot_id, game)                                    REFERENCES Trainer(ot_id, game),
    FOREIGN KEY(held_item, game)                                REFERENCES Item(name, game)
);
COMMENT ON TABLE Pokemon IS 'A single instance of a Pokémon.';
COMMENT ON COLUMN Pokemon.reg_form IS 'NULL if this species has no regional forms.';
COMMENT ON COLUMN Pokemon.spc_form IS 'NULL if this species has no special forms.';
COMMENT ON COLUMN Pokemon.btl_form IS 'NULL if not currently in a battle form.';
COMMENT ON COLUMN Pokemon.ot_id IS 'NULL if not owned by a trained.';
COMMENT ON COLUMN Pokemon.ot_name IS 'NULL if not owned by a trainer.';
COMMENT ON COLUMN Pokemon.date_met IS 'NULL if not owned by a trainer.';
